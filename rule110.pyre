import "std"

macro print_num  # num
    ' ' putchar
    1 = if
        '*' putchar
    else
        ' ' putchar
    end
end

macro rule110  # lcr
         dup 000 = if 0   # 000 -> 0
    else dup 001 = if 1   # 001 -> 1
    else dup 010 = if 1   # 010 -> 1
    else dup 011 = if 1   # 011 -> 1
    else dup 100 = if 0   # 100 -> 0
    else dup 101 = if 1   # 101 -> 1
    else dup 110 = if 1   # 110 -> 1
    else dup 111 = if 0   # 111 -> 0
    end end end end end end end end
    swap drop
end

macro to_dec  # a b c
    swap 10 *   # a c (10 * b)
    rot3 100 *  # c (10 * b) (100 * a)
    + +         # 100a + 10b + c
end

macro get_110   # i
    dup dup  # i i i
    1 - rot3 rot3 1 +  # (i-1) i (i+1)
    get_uint8 rot3 get_uint8 rot3 get_uint8 rot3  # [i-1] [i] [i+1]
    to_dec
end

# Constants
define LENGTH 40
define MAX_BUFFER_SIZE 500
define LINES 40


procedure main
    # "Let's do some rule 110 stuff \n" print
    # # Value Start                 End
    #       0     0 MAX_BUFFER_SIZE 2 *   set_mem

    # LENGTH 1 - 1 set_uint8

    # macro print_line
    #     1 while dup LENGTH < do dup get_uint8 print_num 1 + end drop '\n' putchar
    # end

    # print_line
    # 1 while dup LINES < do
    #     1 while dup LENGTH < do
    #         dup get_110 rule110         # i value
    #         swap dup MAX_BUFFER_SIZE +  # value i index
    #         rot3 set_uint8              # i index value set_uint8
    #         1 +
    #     end drop
    #     0 MAX_BUFFER_SIZE LENGTH copy_mem
    #     print_line
    #     1 +
    # end drop

    257 show_uint

end
