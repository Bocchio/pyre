macro get_item  # i
    memory swap + load  # memory[i]
end

macro set_item  # i -- value
    memory rot3 +  # value -- memory + i
    swap store  # memory[i] <- value
end

macro set_mem  # c a b
    while 2dup < do
        # b c a
        rot3 rot3 2dup swap set_item
        # c (a+1) b
        1 + rot3
    end
end

macro copy_mem  # dest source len
    # d s l
    2dup + swap drop
    # d s L s L
    while 2dup < do
        rot3 rot3           # L d s
        dup get_item        # L d s [s]
        rot3 dup rot3       # L s d d [s]
        set_item            # L s d
        1 + swap 1 + rot3   # (d+1) (s+1) L
    end drop drop drop
end

macro print_mem  # a b
    while 2dup < do
        swap # b a
        dup get_item 48 + putchar  # print 48 + [a]
        1 + swap
    end drop drop
    '\n' putchar
end

macro print_num  # num
    ' ' putchar
    1 = if
        '*' putchar
    else
        ' ' putchar
    end
end

macro rule110  # lcr
         dup 000 = if 0   # 000 -> 0
    else dup 001 = if 1   # 001 -> 1
    else dup 010 = if 1   # 010 -> 1
    else dup 011 = if 1   # 011 -> 1
    else dup 100 = if 0   # 100 -> 0
    else dup 101 = if 1   # 101 -> 1
    else dup 110 = if 1   # 110 -> 1
    else dup 111 = if 0   # 111 -> 0
    end end end end end end end end
    swap drop
end

macro to_dec  # a b c
    swap 10 *   # a c (10 * b)
    rot3 100 *  # c (10 * b) (100 * a)
    + +         # 100a + 10b + c
end

macro get_110   # i
    dup dup  # i i i
    1 - rot3 rot3 1 +  # (i-1) i (i+1)
    get_item rot3 get_item rot3 get_item rot3  # [i-1] [i] [i+1]
    to_dec
end

# Constants
macro LENGTH 40 end
macro MAX_BUFFER_SIZE 500 end
macro LINES 40 end


procedure main
    "Let's do some rule 110 stuff \n" print
    # Value Start                 End
          0     0 MAX_BUFFER_SIZE 2 *   set_mem

    LENGTH 1 - 1 set_item

    macro print_line
        1 while dup LENGTH < do dup get_item print_num 1 + end drop '\n' putchar
    end

    print_line
    1 while dup LINES < do
        1 while dup LENGTH < do
            dup get_110 rule110         # i value
            swap dup MAX_BUFFER_SIZE +  # value i index
            rot3 set_item               # i index value set_item
            1 +
        end drop
        0 MAX_BUFFER_SIZE LENGTH copy_mem
        print_line
        1 +
    end drop

end
