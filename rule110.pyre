import "std"

macro print_num  # num
    ' ' putchar
    1 = if
        '*' putchar
    else
        ' ' putchar
    end
end

macro rule110  # lcr
    0 swap
    where res lcr in
         dup 000 = if 0 !res  # 000 -> 0
    else dup 001 = if 1 !res  # 001 -> 1
    else dup 010 = if 1 !res  # 010 -> 1
    else dup 011 = if 1 !res  # 011 -> 1
    else dup 100 = if 0 !res  # 100 -> 0
    else dup 101 = if 1 !res  # 101 -> 1
    else dup 110 = if 1 !res  # 110 -> 1
    else dup 111 = if 0 !res  # 111 -> 0
    end end end end end end end end
    end
    drop
end

macro to_dec  # a b c
    where a b c in
        a 100 *
        b 10 *
        c + +
        !a
    end drop drop
end

macro get_110   # i
    dup dup
    where i j k in
        i--
        k++
        i get_uint8 !i
        j get_uint8 !j
        k get_uint8 !k
    end
    to_dec
end

# Constants
define LENGTH 40
define MAX_BUFFER_SIZE 500
define LINES 40


procedure main
    "Let's do some rule 110 stuff \n" print
    # Value Start                 End
          0     0 MAX_BUFFER_SIZE 2 *   set_mem

    LENGTH 1 - 1 set_uint8

    macro print_line
        1
        where c in
        while c LENGTH < do
            c get_uint8 print_num
            c++
            end
        end drop
        '\n' putchar
    end


    print_line
    1 1
    where line cell in
        while line LINES < do
        while cell LENGTH < do
                cell MAX_BUFFER_SIZE +  # index
                cell get_110 rule110    # value
                set_uint8               # i index value set_uint8
            cell++
        end 0 !cell

        0 MAX_BUFFER_SIZE LENGTH copy_mem
        print_line

        + 1

        line++
    end
    end
    drop drop

    drop drop drop
end
