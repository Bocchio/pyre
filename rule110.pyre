import "std"

procedure print_num num -- in
    ' ' putchar
    if num 1 = do
        '*' putchar
    else
        ' ' putchar
    end
end

procedure rule110 lcr -- res in
    if   lcr 000 = do 0 !res  # 000 -> 0
    elif lcr 001 = do 1 !res  # 001 -> 1
    elif lcr 010 = do 1 !res  # 010 -> 1
    elif lcr 011 = do 1 !res  # 011 -> 1
    elif lcr 100 = do 0 !res  # 100 -> 0
    elif lcr 101 = do 1 !res  # 101 -> 1
    elif lcr 110 = do 1 !res  # 110 -> 1
    elif lcr 111 = do 0 !res  # 111 -> 0
    end
end

procedure to_dec a b c -- res in
    a 100 *
    b 10 *
    c + +
    !res
end

procedure get_110 position -- res in
    position position position
    where i j k in
        i--
        k++
        memory[i] !i
        memory[j] !j
        memory[k] !k
    end
    to_dec !res
end

# Constants
define LENGTH 40
define MAX_BUFFER_SIZE 500
define LINES 40

procedure print_line -- in
    1
    where c in
        while c LENGTH < do
            memory:uint8[c] print_num
            c++
        end
    end drop
    '\n' putchar
end

procedure main -- in
    "Let's do some rule 110 stuff \n" print

    # (0, 0, MAX_BUFFER_SIZE 2 *) set_mem


    0 0 MAX_BUFFER_SIZE 2 * set_mem

    1 !memory:uint8[LENGTH 1 -]

    print_line
    1 1
    where line cell in
        while line LINES < do
            1 !cell
            while cell LENGTH < do
                cell get_110 rule110 !memory:uint8[cell MAX_BUFFER_SIZE +]
                cell++
            end
            0 MAX_BUFFER_SIZE LENGTH copy_mem
            print_line
            line++
        end
    end
    drop drop

end
